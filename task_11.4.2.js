function isNumberSimple(num) {
    if (num <= 1000 && num >= 0){
    // Для 0 и 1 определим свое действие через еще одну функцию. Для других чисел вызываем функцию проверки значения:
        if (num === 0 || num === 1) {
            resultErrorConsole(num);
        } else {
            resultSimpleOrNot(num, checkForSimple(num));
        }
    } else {
        console.log("Ошибка диапазона");
    }
}

function checkForSimple(value){
    let simpleStatus = false; //По умолчанию считаем, что число НЕ является простым
    let i = 2; //Проверку начинаем с числа 2, т.к. на 1 все числа делятся
    let devideCount = 1; //Простое число делится на 1 и на само себя, т.е. максимальное число делителей = 2, если > 2, то число НЕ простое.
    do {
        simpleStatus = (value % i == 0)? true:false; // Если число без остатка делится на i, то увеличиваем счетчик делителей devideCount
        if (simpleStatus) devideCount++;
            // console.log(value, i, simpleStatus, devideCount);
        i++;
    } while (devideCount < 3 && i <= value);
    // console.log(devideCount);
    return devideCount;
}
// Для 0 и 1 выдводим сообщение об ошибке
function resultErrorConsole(value){
    console.log(`${value} не относится к простым числам`)
}

// Функция вывода результата в консоль:
function resultSimpleOrNot(value, result){
    if (result == 2) console.log(`Число ${value} - является простым`);
    else console.log (`Число ${value} - НЕ является простым`)
}

isNumberSimple(0);
isNumberSimple(1);
isNumberSimple(15);
isNumberSimple(137);
isNumberSimple(1001);


// Сама задача решена, но опять же, функция спроектирована неправильно, хотя уже намного лучше, чем в предыдущем задании :) Вам нужно получить универсальную функцию, которую можно вызывать с разными числами. Сейчас, чтобы проверять результат на разных числах, вам приходится постоянно комментировать/раскомментировать значения testValue. Если бы функция была написана правильным образом, вам бы не пришлось этого делать, можно было бы просто передавать разные числа в качестве аргументов.
// Также при проверке testValue вы используете одновременно 2 логических оператора: switch и if. Так лучше не делать, это усложняет читаемость кода и снова делит одну и ту же операцию (проверку на корректность значения) на 2 смысловые части. Используйте либо switch, либо if. Я бы советовала if в данной ситуации
// Выше исправила на более правильный вариант
